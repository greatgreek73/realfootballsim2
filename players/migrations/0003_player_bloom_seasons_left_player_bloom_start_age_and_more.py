# Generated by Django 5.1.4 on 2025-07-21 18:12

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('players', '0002_player_base_morale'),
    ]

    operations = [
        migrations.AddField(
            model_name='player',
            name='bloom_seasons_left',
            field=models.PositiveIntegerField(default=0, help_text='Количество оставшихся сезонов расцвета (0 = расцвет не активен)', verbose_name='Bloom Seasons Left'),
        ),
        migrations.AddField(
            model_name='player',
            name='bloom_start_age',
            field=models.PositiveIntegerField(default=18, help_text='Возраст начала расцвета игрока', verbose_name='Bloom Start Age'),
        ),
        migrations.AddField(
            model_name='player',
            name='bloom_type',
            field=models.CharField(choices=[('early', 'Early Bloom'), ('middle', 'Middle Bloom'), ('late', 'Late Bloom')], default='middle', help_text='Тип расцвета игрока, определяющий возраст и силу бонуса', max_length=10, verbose_name='Bloom Type'),
        ),
        migrations.CreateModel(
            name='TrainingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('physical_weight', models.DecimalField(decimal_places=2, default=Decimal('16.67'), help_text='Процент фокуса на физические характеристики (strength, stamina, pace)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Physical Training Weight (%)')),
                ('defensive_weight', models.DecimalField(decimal_places=2, default=Decimal('16.67'), help_text='Процент фокуса на защитные характеристики (marking, tackling, heading)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Defensive Training Weight (%)')),
                ('attacking_weight', models.DecimalField(decimal_places=2, default=Decimal('16.67'), help_text='Процент фокуса на атакующие характеристики (finishing, heading, long_range)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Attacking Training Weight (%)')),
                ('mental_weight', models.DecimalField(decimal_places=2, default=Decimal('16.67'), help_text='Процент фокуса на ментальные характеристики (vision, flair)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Mental Training Weight (%)')),
                ('technical_weight', models.DecimalField(decimal_places=2, default=Decimal('16.67'), help_text='Процент фокуса на технические характеристики (dribbling, crossing, passing)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Technical Training Weight (%)')),
                ('tactical_weight', models.DecimalField(decimal_places=2, default=Decimal('16.67'), help_text='Процент фокуса на тактические характеристики (work_rate, positioning, accuracy)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tactical Training Weight (%)')),
                ('gk_physical_weight', models.DecimalField(decimal_places=2, default=Decimal('33.33'), help_text='Процент фокуса на физические характеристики для вратарей', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='GK Physical Training Weight (%)')),
                ('gk_core_skills_weight', models.DecimalField(decimal_places=2, default=Decimal('33.33'), help_text='Процент фокуса на основные навыки вратаря (reflexes, handling, positioning, aerial)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='GK Core Skills Weight (%)')),
                ('gk_additional_skills_weight', models.DecimalField(decimal_places=2, default=Decimal('33.34'), help_text='Процент фокуса на дополнительные навыки вратаря (command, distribution, etc.)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='GK Additional Skills Weight (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='training_settings', to='players.player', verbose_name='Player')),
            ],
            options={
                'verbose_name': 'Training Settings',
                'verbose_name_plural': 'Training Settings',
            },
        ),
    ]
